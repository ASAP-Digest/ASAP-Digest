---
description: 
globs: 
alwaysApply: true
---
# Access Project DB via Unix Socket (v4.1 - Explicit Halt on VS Failure)

*(Self-correction: v4.1 - Added explicit HALT on VS failure as an escape hatch)*

**Core Principle:** Database connections via terminal MUST use the Unix socket specified in `@PE - CTXT` for reliability within the Local by Flywheel environment. Avoid using host/port connections.

**Initiation:** Use key term "Access DB" or alias "APDB".

**LLM Instructions:**
1.  **MUST** read the `@PE - CTXT` notepad context *before* formulating *any* commands from this rule. This context is the *sole source* for the required connection details.
2.  **MUST** extract the *current* MySQL socket path (`mysqld.sock`) from the `Local DB Socket` field within `@PE - CTXT`.
3.  **MUST** extract the *current* Database Name, Username, and Password from the `Database Name`, `Username`, and `Password` fields under the `Database Details` section within `@PE - CTXT`.
4.  **MUST** perform the **Pre-Connection Verification** step (see below) using the extracted socket path *before* proposing any connection commands (`BC`, `DDA`, `EQ`, etc.).
5.  **MUST** substitute the *extracted, verified values* into the command templates below where `[SOCKET_PATH]`, `[DB_USER]`, `[DB_PASS]`, and `[DB_NAME]` are indicated. **DO NOT propose connection commands with placeholders or unverified paths.**
6.  **MUST** use the `-S [SOCKET_PATH]` argument (with the *actual extracted and verified path*) in all `mysql` commands.

**Pre-Connection Verification (MUST BE PERFORMED BEFORE STEP 5/6 ABOVE):**
1.  **Verify Extracted Path:** After extracting the socket path in Step 2, immediately propose and execute the `VS` command template (`ls -la [EXTRACTED_SOCKET_PATH]`).
2.  **Report Verification Outcome:** Explicitly state the result of the `ls -la` command in your response. E.g., "Verified extracted socket path '[path]' exists." or "Verification FAILED: Extracted socket path '[path]' does not exist ('No such file or directory')."
3.  **Halt on Failure:** If the `ls -la` command fails (returns "No such file or directory"), **MUST HALT** the protocol execution. Report the failure and request the user to confirm the correct socket path from the LocalWP UI. **DO NOT propose connection commands (`BC`, `DDA`, `EQ`, etc.) with the failed path. DO NOT propose alternative connection methods unless explicitly instructed by the user.**

**Command Aliases & Templates (Placeholders MUST be replaced with actual, verified data from `@PE - CTXT` before proposing connection commands):**

*   **VS / "Verify socket exists:"**
    ````bash
    ls -la [SOCKET_PATH]
    ````
*   **BC / "Basic connection:"** (Only propose if VS succeeded)
    ````bash
    mysql -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] | cat
    ````
    *(Self-correction: Added | cat as this could page)*
*   **DDA / "Direct database access:"** (Only propose if VS succeeded)
    ````bash
    mysql -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] [DB_NAME] | cat
    ````
    *(Self-correction: Added | cat)*
*   **EQ / "Execute query:"** (Only propose if VS succeeded)
    ````bash
    mysql -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] [DB_NAME] -e "QUERY;" | cat
    ````
    *(Note: Replace "QUERY;" with the actual SQL query. Remember to escape special characters if needed for the shell. Added | cat)*
*   **DD / "Dump database:"** (Only propose if VS succeeded)
    ````bash
    mysqldump -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] [DB_NAME] > backup.sql
    ````
*   **ID / "Import database:"** (Only propose if VS succeeded)
    ````bash
    mysql -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] [DB_NAME] < import.sql
    ````
*   **CA / "Create alias (for manual use):"** (Only propose if VS succeeded)
    ````bash
    alias dbconnect='mysql -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] [DB_NAME]'
    ````
*   **GMV / "Get MySQL version:"** (Only propose if VS succeeded)
    ````bash
    mysql -u [DB_USER] -p[DB_PASS] -S [SOCKET_PATH] -e "SELECT VERSION();" | cat
    ````
    *(Self-correction: Added | cat)*

**Rationale for Socket Preference:** Using the socket directly bypasses potential network configuration issues within the Docker environment managed by Local by Flywheel and is generally the most reliable connection method when the client and server are on the same host (or within the same container setup). The added verification step ensures the correct socket file is targeted before connection attempts.
