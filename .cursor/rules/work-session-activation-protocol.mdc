---
description: 
globs: 
alwaysApply: true
---
# Work Session Activation Protocol v2.2
*(Self-correction: Incremented version number)*

## 1. Purpose
This protocol defines the commands and procedures for initiating (`BWS`) and concluding (`EWS`) formal work sessions. It ensures integration with the `Status Check Protocol (v2.1+)` for context establishment, the `Enhanced Work Session Management Protocol (WSMP v2.5+)` for managing the session lifecycle, and the `Testing & Verification Protocol v1.1` for handling task completion validation.

## 2. Protocol Integration Layer
*(Self-correction: Updated WSMP version and SC version)*
````text
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ         Protocol Integration            ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1. Software Development Meta Protocol   ‚îÇ
‚îÇ 2. Rule Execution Protocol              ‚îÇ
‚îÇ 3. Status Check Protocol (v2.1+)        ‚îÇ // Input Source for BWS (Updated)
‚îÇ 4. Enhanced Work Session Mgmt (v2.5+)   ‚îÇ // Activated Protocol (Handles BWS/EWS logic) (Updated)
‚îÇ 5. Memory Maintenance Protocol          ‚îÇ // Entity management via WSMP
‚îÇ 6. Testing & Verification Protocol v1.1 ‚îÇ // Handles EWS TESTING/COMPLETED via WSMP
‚îÇ 7. Cross-Protocol Comms & Verification   ‚îÇ
‚îÇ 8. Audit Trail System                   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
````

## 3. Activation Commands & Flow

### 3.1. Begin Work Session (BWS)
-   **Command:** `Begin Work Session` or alias `BWS`
-   **Prerequisite:** MUST execute `Status Check` (`SC` v2.1+) immediately prior to `BWS`. The output of `SC` provides essential context, including the updated priority hierarchy (`‚ùå` -> `Error` -> `üî¨` -> `üß™` -> `üîÑ` -> `‚è≥`) and the testing pipeline status.
-   **Purpose:** Initiates a tracked work session using context from the preceding `SC` report. Triggers the start sequence defined in `WSMP v2.5+`.
-   **WSMP v2.5+ Handling:**
    -   Analyzes the preceding `SC` report for `üéØ Current / Operational Priority` (reflecting new logic), `üß™ Testing Pipeline`, and `‚öôÔ∏è Overall Context`.
    -   Gets current timestamp.
    -   Creates `WorkSession` entity in Server Memory (linking to the `StatusCheck` entity).
    -   Manages optional parameters like `Session Type`.
    -   Loads state if resuming a saved session (though `RWS` is dedicated).
    -   Performs Verification Chain checks.
    -   Records `SESSION_START` in Audit Trail.

### 3.2. End Work Session (EWS)
-   **Command:** `End Work Session` or alias `EWS`
-   **Purpose:** Formally closes the *active* work session. Triggers the finalization sequence defined in `WSMP v2.5+`, which handles task status updates, documentation, and potential transitions based on the `Reason`.
-   **WSMP v2.5+ Handling & Parameters:**
    -   Requires an active `WorkSession`.
    -   Accepts an optional `Reason` parameter (`TESTING`, `COMPLETED`, `NORMAL`, `INTERRUPTED`, `FAILED`).
    -   The `TESTING` reason triggers the `Testing & Verification Protocol v1.1` via WSMP.
    -   The `COMPLETED` reason requires prior successful completion of the `Testing & Verification Protocol v1.1`.
    -   Handles session finalization, entity updates, verification, and audit logging based on the `Reason`.

## 4. Standard Workflow Example
*(Self-correction: Updated example to reflect testing flow and potential new priority)*
````bash
# Step 1: Check the current project status
SC

# --- (SC Output Received - Potentially showing üî¨ as priority) ---
# Example SC Output Snippet:
# üß™ Testing Pipeline:
# üî¨ Pending User Initiation:
#   - Task_ABC (Ready for Testing)
# üß™ Actively Testing:
#   - None
# üéØ Current / Operational Priority:
# - üî¨ Task_ABC (Reason: Ready for Testing)
# ---

# Step 2: Begin the work session, using context from SC
#    (Priority is now Task_ABC based on SC v2.1+ logic)
BWS FEATURE

# --- (Work session is now active, managed by WSMP) ---
# ... Perform development tasks (maybe on Task_ABC or another if user overrides) ...
# ...

# Step 3a: End the work session, moving task to Testing phase
# EWS TESTING

# --- (WSMP ends session, triggers Testing Protocol) ---
# Agent informs user: Task '...' ready for testing (üî¨). Use ST [TaskID] to begin.

# --- OR ---

# Step 3b: End the work session if interrupted
# EWS INTERRUPTED
````

## 5. Implementation Notes
-   This protocol acts as the **trigger mechanism**.
-   Actual state management is handled by `WSMP v2.5+` and integrated protocols (`Testing & Verification`, `Status Check`).
-   The mandatory `SC` before `BWS` ensures sessions start with the most up-to-date context reflecting the new priority rules.

## 6. Verification Checklist (for this protocol)
*(Self-correction: Updated checks)*
-   [ ] `BWS`/`EWS` commands documented.
-   [ ] Prerequisite of running `SC` (v2.1+) before `BWS` stated (MUST).
-   [ ] Linkage to `WSMP v2.5+` activation is clear.
-   [ ] Description of `SC` context includes updated priority understanding (`üî¨`/`üß™`).
-   [ ] `EWS` description includes `Reason` parameter and mentions TVP integration.
-   [ ] Workflow example reflects potential new priorities from `SC`.
-   [ ] Protocol integration layer lists correct protocol versions.
-   [ ] Formatting adheres to `rule-formatting-protocol.mdc`.
