---
description: 
globs: 
alwaysApply: false
---
# Roadmap Syntax Validation Protocol v1.1

## 1. Purpose
This protocol defines the standardized syntax for entries within the `md-docs/ROADMAP_TASKS.md` file. Adhering to this syntax ensures:
*   Accurate parsing by the `generate-todotxt.js` script.
*   Consistent reporting by the `Status Check` protocol.
*   Clear readability for human maintainers.

## 2. Protocol Integration Layer
```text
┌─────────────────────────────────────────┐
│         Protocol Integration            │
├─────────────────────────────────────────┤
│ 1. generate-todotxt.js                  │ // Primary consumer of this syntax
│ 2. Status Check Protocol (v2.4+)        │ // Reads/interprets this syntax for reporting
│ 3. Task Tracking Protocol               │ // Modifies this syntax (status emojis/timestamps)
│ 4. Work Session Management Proto (v2.13+)│ // Reads/interprets rank & status for RWS fallback
│ 5. Roadmap Syntax Validation (This v1.1)│ // Defines the rules
│ 6. Rule Execution Protocol              │ // Governs application of this protocol
└─────────────────────────────────────────┘
```

## 3. Mandatory Syntax Rules

1.  **File Structure:** Tasks MUST be organized under Markdown headings (`##`, `###`, etc.) to indicate hierarchy.
2.  **Task Line Start:** Each task line MUST start with `- ` (hyphen, space).
3.  **Status Emoji:** The status emoji (e.g., `⏳`, `🔄`, `✅`, etc.) MUST immediately follow the `- ` and be followed by a single space.
4.  **Task Description:** The main description of the task follows the status emoji and space.
5.  **Timestamps:** Completion timestamps (e.g., `✅ MM.DD.YY | HH:MM AM/PM TimeZone`) or other specific timestamps (e.g., `⏸️ [Paused: SWS - Timestamp]`) SHOULD appear at the end of the task description line.
6.  **Source Tag Generation:** The `generate-todotxt.js` script derives `src:+` tags from the heading hierarchy. Headings SHOULD be concise and descriptive.
7.  **Explicit Rank Tag (Optional):**
    *   To explicitly assign a rank (used for priority sorting in RWS mode), the tag ` • [ rnk:X ]` MUST be used, where `X` is a single uppercase letter (A-Z).
    *   The tag MUST appear at the end of the task description, *before* any completion/paused timestamp.
    *   There MUST be a single space before the `•`.
    *   There MUST be a single space between the `•` and the `[`.
    *   There MAY be optional whitespace around `rnk:X` inside the brackets.
    *   Only the *first* valid `rnk:X` tag found on a line will be used if multiple exist.
8.  **Due Date Tag (Optional):**
    *   To specify an optional due date, the tag ` • [ due:MM.DD.YY ]` MUST be used, where `MM.DD.YY` represents the date.
    *   The tag MUST appear at the end of the task description, *before* any completion/paused timestamp and potentially before or after a rank tag.
    *   There MUST be a single space before the `•`.
    *   There MUST be a single space between the `•` and the `[`.
    *   There MAY be optional whitespace around `due:MM.DD.YY` inside the brackets.
    *   The date format MUST be `MM.DD.YY` (two digits for month, day, and year).
    *   Only the *first* valid `due:MM.DD.YY` tag found on a line will be used if multiple exist.

## 4. Examples

```markdown
## Task 1: Major Feature

### Subtask 1.1: Core Logic
- 🔄 Implement main algorithm
- ⏳ Design database schema • [ rnk:B ]
- ⏳ Write unit tests • [ due:04.20.25 ]
- ✅ Initial setup complete ✅ 04.10.25 | 10:00 AM PDT

## Task 2: Bug Fixes
- ⏳ Fix login redirect issue • [ rnk:A ] • [ due:04.15.25 ]
- ⏸️ Investigate caching problem [Paused: SWS - 04.12.25_143000]
```

**Incorrect Examples:**

```markdown
- ⏳ Missing space after emojiFix UI bug
- 🔄 No leading hyphen/space
- ⏳ Rank tag in wrong place • [ rnk:A ] Fix styling
- ⏳ Rank tag missing space •[ rnk:B ] Implement feature
- ⏳ Rank tag malformed • [ rank: C ] Update docs
- ⏳ Due date tag wrong format • [ due:4.15.2025 ] Fix validation
- ⏳ Due date tag missing space •[ due:04.16.25 ] Add tests
```

## 5. Validation Checks (To be performed by Agent/Script)

1.  **Heading Structure:** Verify lines starting with `#` are valid Markdown headings.
2.  **Task Line Format:** Verify lines representing tasks start with `- ` followed by a recognized status emoji (`⏳`, `🔄`, `✅`, `⏸️`, `❌`, `🔬`, `🧪`) and a space.
3.  **Timestamp Format:** Verify timestamps (if present) generally follow the `MM.DD.YY | HH:MM AM/PM TimeZone` pattern or the `[Paused: SWS - YYYYMMDD_HHMMSS]` pattern.
4.  **Rank Tag Format:**
    *   Check for ` • [ rnk:X ]` format (with correct spacing around `•` and `[`).
    *   Verify `X` is a single uppercase letter.
    *   Warn if multiple valid rank tags appear on the same line.
    *   Warn if text resembling `rnk:` appears outside the valid tag structure.
5.  **Due Date Tag Format:**
    *   Check for ` • [ due:MM.DD.YY ]` format (with correct spacing around `•` and `[`).
    *   Verify the date part matches `\d{2}\.\d{2}\.\d{2}`.
    *   Warn if multiple valid due date tags appear on the same line.
    *   Warn if text resembling `due:` appears outside the valid tag structure.

